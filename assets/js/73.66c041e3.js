(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{487:function(n,r,t){"use strict";t.r(r);var o=t(1),s=Object(o.a)({},(function(){var n=this,r=n._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("p",[r("strong",[n._v("语言可以分为")]),r("br"),n._v("\n强类型语言 和 弱类型语言"),r("br"),n._v("\n静态语言 和 动态语言"),r("br"),n._v(" "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/110175680",target:"_blank",rel:"noopener noreferrer"}},[n._v("相关博客"),r("OutboundLink")],1)]),n._v(" "),r("p",[r("strong",[n._v("强类型语言")]),r("br"),n._v("\n在强类型语言中，当一个对象从调用函数传递到被调用函数时，其类型必须与被调用函数中声明的类型兼容。 -- Liskov, Zilles 1974"),r("br"),n._v("\n强类型语言不允许改变变量的数据类型，除非进行强制类型转换"),r("br"),n._v("\n即我们声明的变量，不能被赋值其他类型的变量，除非对赋值的变量先进行强制类型转换")]),n._v(" "),r("p",[r("strong",[n._v("弱类型语言")]),r("br"),n._v("\n与强类型语言相反，弱类型语言中，变量的值其类型是宽泛的，可以被赋值多种类型的值。"),r("br"),n._v("\n比如我们使用的 javascript，假如声明了一个变量 a，a 的值可以是数字 1，可以是字符串“abcd”，也可以是对象、数组、函数...")]),n._v(" "),r("p",[r("strong",[n._v("静态语言和动态语言")]),r("br"),n._v("\n静态类型语言: 在编译阶段确定所有变量的类型"),r("br"),n._v("\n动态类型语言: 在执行阶段确定所有变量的类型")])])}),[],!1,null,null,null);r.default=s.exports}}]);