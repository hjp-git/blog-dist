(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{642:function(t,l,s){"use strict";s.r(l);var o=s(1),v=Object(o.a)({},(function(){var t=this,l=t._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("ul",[l("li",[t._v("Vue 插槽 实现了一套内容分发的 API，这套 API 的设计灵感源自 Web Components 规范草案，将 "),l("code",[t._v("<slot>")]),t._v(" 元素作为承载分发内容的出口。")]),t._v(" "),l("li",[t._v("如果组件没有包含一个 "),l("code",[t._v("<slot>")]),t._v(" 元素，则该组件起始标签和结束标签之间的任何内容都会抛弃（组件标签中的任何内容都不会渲染出来）")]),t._v(" "),l("li",[t._v("父级模板的所有内容都是在父级作用域中编译的，子模板里的所有内容都是在子作用域中编译的 "),l("code",[t._v("<slot>")]),t._v(" 里的数据只与父元素有关")])]),t._v(" "),l("div",{staticClass:"custom-block tip"},[l("p",{staticClass:"title"}),l("p",[t._v("插槽本质是子组件的一段模板，然后由父组件控制内容和显示隐藏")])]),l("ul",[l("li",[t._v("插槽分为\n"),l("ul",[l("li",[t._v("匿名插槽")]),t._v(" "),l("li",[t._v("具名插槽")]),t._v(" "),l("li",[t._v("作用域插槽")])])])])])}),[],!1,null,null,null);l.default=v.exports}}]);